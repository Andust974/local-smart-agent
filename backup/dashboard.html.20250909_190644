<!doctype html>
<html lang="ru">
<head>
  <meta charset="utf-8"/>
  <title>Local Smart Agent — Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  <style>
    body { font-family: system-ui, sans-serif; margin: 24px; }
    .row { display:flex; gap:12px; align-items:center; margin-bottom:12px; flex-wrap:wrap; }
    input, button { padding:8px 12px; }
    code { background:#f2f2f2; padding:2px 6px; border-radius:4px; }
    #log { white-space: pre-wrap; background:#fafafa; border:1px solid #eee; padding:12px; border-radius:6px; }
    .ok { color: #0a0; } .bad { color:#c00; }
  </style>
</head>
<body>
  <h1>Local Smart Agent — Dashboard</h1>

  <div class="row">
    <button id="btnHealth">Проверить /health</button>
    <span id="healthStatus">—</span>
  </div>

  <div class="row">
    <label for="count">Собрать бандл из N отчётов:</label>
    <input id="count" type="number" min="1" value="1" style="width:80px"/>
    <button id="btnPack">Собрать бандл</button>
    <span id="packResp">—</span>
  </div>

  <div class="row">
    <a href="../reports/" target="_blank">Открыть папку Reports ↗</a>
  </div>

  <h3>Лог</h3>
  <div id="log"></div>

<script>
(function(){
  const API = 'http://127.0.0.1:8766';
  const TOKEN = 'changeme';

  function log(msg){
    const el = document.getElementById('log');
    el.textContent = (new Date()).toISOString() + ' ' + msg + '\n' + el.textContent;
  }

  async function api(path){
    const url = API + path + (path.includes('?') ? '&' : '?') + 'token=' + encodeURIComponent(TOKEN);
    const res = await fetch(url, { method: 'GET' }); // без кастомных заголовков → без CORS preflight
    if (!res.ok){
      const t = await res.text().catch(()=> '');
      throw new Error('HTTP ' + res.status + ' ' + t);
    }
    return res.json();
  }

  async function checkHealth(){
    try{
      const data = await api('/health');
      document.getElementById('healthStatus').innerHTML = '<span class="ok">OK</span>';
      log('health → ' + JSON.stringify(data));
    }catch(e){
      document.getElementById('healthStatus').innerHTML = '<span class="bad">FAIL</span>';
      log('health FAIL: ' + e.message);
    }
  }

  async function triggerBundle(){
    const n = Math.max(1, parseInt(document.getElementById('count').value || '1', 10));
    try{
      const data = await api('/report_pack?count=' + n);
      document.getElementById('packResp').textContent = data.queued || 'ok';
      log('report_pack → ' + JSON.stringify(data));
    }catch(e){
      document.getElementById('packResp').textContent = 'FAIL';
      log('report_pack FAIL: ' + e.message);
    }
  }

  document.getElementById('btnHealth').addEventListener('click', checkHealth);
  document.getElementById('btnPack').addEventListener('click', triggerBundle);

  // авто-проверка при загрузке
  checkHealth().catch(()=>{});
})();
</script>
</body>
</html>
