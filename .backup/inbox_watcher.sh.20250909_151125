#!/usr/bin/env bash
set -Eeuo pipefail
BASE="${HOME}/ai-agent/projects/local_smart_agent"
IN="$BASE/tasks/inbox"
DONE="$BASE/tasks/done"
FAIL="$BASE/tasks/failed"
mkdir -p "$IN" "$DONE" "$FAIL"

process_file() {
  f="$1"
  # Достаём поля из JSON без jq (примитивный парсер)
  TASK=$(grep -oE '"task"\s*:\s*"[^"]+"' "$f" | sed 's/.*:"\(.*\)"/\1/')
  COUNT=$(grep -oE '"count"\s*:\s*[0-9]+' "$f" | sed 's/.*:\s*//')
  COUNT=${COUNT:-5}

  case "$TASK" in
    report_pack)
      OUT=$(bash "$BASE/bin/report_pack.sh" "$COUNT") || { mv -f "$f" "$FAIL/"; return 1; }
      echo "[watcher] report_pack OK → $OUT"
      mv -f "$f" "$DONE/"
      ;;
    *)
      echo "[watcher] unsupported task: $TASK"
      mv -f "$f" "$FAIL/"
      ;;
  esac
}

# Обрабатываем все уже лежащие задачи
for f in "$IN"/*.json; do
  [ -f "$f" ] && process_file "$f" || true
done

# Наблюдаем новые файлы (polling, чтобы не тянуть inotify)
while true; do
  for f in "$IN"/*.json; do
    [ -f "$f" ] && process_file "$f" || true
  done
  sleep 2
done
