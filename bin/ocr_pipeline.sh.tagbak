#!/usr/bin/env bash
set -u
IFS=$'\n\t'
ROOT="/home/andrei-work/ai-agent/projects/local_smart_agent"
OCR_TAG="ocr-prod"
PIPE_LOG="$ROOT/logs/ocr_pipeline.log"
OCR_LOG="$PIPE_LOG" source "$ROOT/bin/ocr_log.sh" 2>/dev/null || true

norm="$ROOT/bin/ocr_norm_run.sh"
parse="$ROOT/bin/ocr_parse_run.sh"

usage(){ echo "usage: ocr_pipeline.sh [--limit N] [<report_dir>]\n  --limit N  обработать N последних (по умолч. 1, если без аргумента)\n  <report_dir>  конкретная папка reports/ocr/<id>"; }

run_one(){
  local d="$1"
  if [[ ! -d "$d" ]]; then log_fail "[FAIL] not a dir: $d"; return 2; fi
  log_info "[RUN] pipeline → $d"
  if bash "$norm" "$d" >>"$PIPE_LOG" 2>&1 && bash "$parse" "$d" >>"$PIPE_LOG" 2>&1; then
    log_ok "[OK] pipeline → $d"
    return 0
  else
    log_fail "[FAIL] pipeline → $d"
    return 1
  fi
}

main(){
  mkdir -p "$(dirname "$PIPE_LOG")"
  local LIMIT=1

  # parse args
  while [[ $# -gt 0 ]]; do
    case "$1" in
      --limit) shift; LIMIT="${1:-1}";;
      --limit=*) LIMIT="${1#*=}";;
      -h|--help) usage; exit 0;;
      *) break;;
    esac
    shift || true
  done

  if [[ $# -ge 1 ]]; then
    run_one "$1"; exit $?
  fi

  # без аргументов — берём N последних папок
  if ls -1d "$ROOT/reports/ocr/"* >/dev/null 2>&1; then
    mapfile -t dirs < <(ls -1dt "$ROOT/reports/ocr/"* | head -n "$LIMIT")
    local rc=0
    for d in "${dirs[@]}"; do
      run_one "$d" || rc=1
    done
    exit $rc
  else
    log_info "[INFO] no reports/ocr/*"
    exit 0
  fi
}

main "$@"
